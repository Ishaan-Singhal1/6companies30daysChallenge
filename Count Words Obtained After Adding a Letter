class Solution{
    public:
    bool isPossible(string& s, unordered_set<string>& st){
        int n=s.length();
        for (int i=0;i<n;i++)
        {
            string temp="";
            for (int j=0;j<n;j++)
            {
                if (j==i)
                    continue;
                temp.push_back(s[j]);
            }
            if (st.find(temp)!=st.end())
                return true;
        }
        return false;
    }

    int wordCount(vector<string>& start, vector<string>& target)
    {   
        unordered_set<string> st;
        int n=target.size();
        for (auto& it : start){
            sort(it.begin(),it.end()); 
            st.insert(it);
        }
        
        int count=0;
        for (int i=0;i<n;i++){
            sort(target[i].begin(),target[i].end());
            if (isPossible(target[i],st)){
                count++;
            }
        }
        return count;
    }
};

class Solution {
public:
    bool is_palindrome(string s){
        int i=0;
        int j=s.size()-1;
        while(i<j){
            if(s[i]!=s[j]){
                return false;
            }
            i++;
            j--;
        }
        return true;
    }

    void solve(int ind,int n,string s,string& s1,string& s2,int& ans){
        if(ind == n){
            if(is_palindrome(s1) && is_palindrome(s2)){
                int product=s1.size()*s2.size();
                ans=max(product,ans);
            }
            return;
        }
        s1.push_back(s[ind]);
        solve(ind+1,n,s,s1,s2,ans);
        s1.pop_back();
        solve(ind+1,n,s,s1,s2,ans);
        
        s2.push_back(s[ind]);
        solve(ind+1,n,s,s1,s2,ans);
        s2.pop_back();
    }

    int maxProduct(string s) {
        string s1,s2;
        int n=s.size();
        int ans=0;
        solve(0,n,s,s1,s2,ans);
        return ans;
    }
};

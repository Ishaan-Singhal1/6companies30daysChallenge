class Solution {
public:
    void solve(int ind,string digits,int n,unordered_map<int,string>mpp,string& temp,vector<string>& ans) {
        if(ind==n){
            ans.push_back(temp);
            return;
        }
        int digit=digits[ind]-48;
        string s=mpp[digit];
        for(auto it : s){
            temp.push_back(it);
            solve(ind+1,digits,n,mpp,temp,ans);
            temp.pop_back();
        }
    }

    vector<string> letterCombinations(string digits) {
        unordered_map <int,string> mpp;
        mpp[2] = {"abc"}; 
        mpp[3] = {"def"};
        mpp[4] = {"ghi"};
        mpp[5] = {"jkl"};
        mpp[6] = {"mno"};
        mpp[7] = {"pqrs"};
        mpp[8] = {"tuv"};
        mpp[9] = {"wxyz"};
        vector<string>ans;
        string temp;
        if(digits.empty()){
            return {};
        }
        solve(0,digits,digits.size(),mpp,temp,ans);
        return ans;
    }
};
